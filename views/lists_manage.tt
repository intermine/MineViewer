<div>
    <select id='list-operation-selector'>
        <option value="merge" selected>Merge</option>
        <option value="subtract">Subtract</option>
        <option value="intersect">Intersect</option>
        <option value="diff">Difference</option>
        <option value="delete">Delete</option>
    </select>
    <div id="operation-boxes-container">
    <div id="operation-boxes">
        [% simple_ops = [ 'delete', 'merge', 'intersect', 'diff' ] %]
[% FOREACH op IN simple_ops %]
<div id="[% op %]-box">
    [% FOREACH list IN lists %]
    <input type="checkbox" name="[% list.name %]" id="[% op %]-selector-[% list.name.replace(' ', '_') %]">
    <label for="[% op %]-selector-[% list.name.replace(' ', '_') %]">
        [% list.name %] ([% list.size %] [% pluraliser(list.type) %])
    </label><br/>
    [% END %]
    <button onclick="jQuery('#[% op %]-box input').each(function(i, e) {jQuery(e).attr('checked', true)});">Select All</button>
    <button onclick="jQuery('#[% op %]-box input').each(function(i, e) {jQuery(e).attr('checked', false)});">Clear Selection</button>
    <button id="list-[% op %]-button">[% op | ucfirst %] Lists</button>
</div>
[% END %]
        <div id="subtract-box">
            <div id="lhs-subt" style="float:left">
            [% FOREACH list IN lists %]
            <input type="checkbox" id="lhs-subt-selector-[% list.name %]">
            <label for="lhs-subt-selector-[% list.name %]">
                [% list.name %] ([% list.size %] [% pluraliser(list.type) %])
            </label><br/>
            [% END %]
            <button onclick="jQuery('#lhs-subt input').each(function(i, e) {jQuery(e).attr('checked', true)});">Select All</button>
            <button onclick="jQuery('#lhs-subt input').each(function(i, e) {jQuery(e).attr('checked', false)});">Clear Selection</button>
            </div>
            <div id="rhs-subt" style="float:right">
            [% FOREACH list IN lists %]
            <input type="checkbox" id="rhs-subt-selector-[% list.name %]">
            <label for="rhs-subt-selector-[% list.name %]">
                [% list.name %] ([% list.size %] [% pluraliser(list.type) %])
            </label><br/>
            [% END %]
            <button onclick="jQuery('#rhs-subt input').each(function(i, e) {jQuery(e).attr('checked', true)});">Select All</button>
            <button onclick="jQuery('#rhs-subt input').each(function(i, e) {jQuery(e).attr('checked', false)});">Clear Selection</button>
            </div>
            <button id="list-subtracter">Subtract Lists on Right from Lists on Left</button>
        </div>
    </div>
    </div>
</div>

<div id="list-namer" title="Choose A Name for Your List" style="display:none">
    <p>Choose a name for your new list:</p>
    <input type="text" id="created-list-name">
    <p>Describe this list:</p>
    <input type="text" id="created-list-desc">
</div>

<script type="text/javascript">
function handleOperationSelection() {
    var operation = jQuery('#list-operation-selector').val();
    console.log("Current operation is: " + operation);
    jQuery('#operation-boxes').children('div').each(function(i, e) {
        if (e.id == (operation + "-box")) {
            jQuery(e).show();
        } else {
            jQuery(e).hide();
        }
    });
}
[% ops = [
    {
        kw = "merge"
        adj = "Merged"
        noun = "Merger"
    },
    {
        kw = "intersect"
        adj = "Intersected"
        noun = "Intersection"
    },
    {
        kw = "diff"
        adj = "Symmetric difference"
        noun = "Symmetric difference"
    }] %]

function initialiseOpHandlers() {
    [% FOREACH op IN ops %]
        jQuery('#list-[% op.kw %]-button').click(function() {
            var list_names = [];
            jQuery('#[% op.kw %]-box input').each(function(i, e) {
                if (jQuery(e).attr('checked')) {
                    list_names.push(e.name);
                }
            });
            var now = new Date();
            var dateString = (now + "").split(' ').slice(0, 5).join(' ')
            jQuery('#created-list-name').val("[% op.adj %] List " + dateString);
            jQuery('#created-list-desc').val("[% op.noun %] of " + list_names.join(' and '));
            openListCreationDialog(list_names, '[% op.kw %]');
        });
    [% END %]
    jQuery('#list-delete-button').click(function() {
        var list_names = [];
        jQuery('#delete-box input').each(function(i, e) {
            if (jQuery(e).attr('checked')) {
                list_names.push(e.name);
            }
        });

        jQuery('#delendum').text(list_names.join(' and '));
        jQuery('#confirm-del').dialog({
            autoOpen: true,
            modal: true,
            width: 400,
            buttons: {
                "Delete": function() {
                    jQuery(this).dialog('close');
                    jQuery.post("[% proxy.uri_for('/deletelists') %]", 
                        { lists: list_names.join(';') }, function(results) {
                            handler(results);
                            window.location.hash = null;
                            jQuery('#lists option').each(function(i, e) {
                                if (jQuery.inArray(jQuery(e).val(), list_names) >= 0) {
                                    jQuery(e).remove();
                                } 
                            });
                            jQuery('#lists option').each(function(i, e) {
                                if (jQuery.inArray(jQuery(e).val(), list_names) < 0) {
                                    jQuery(e).attr('selected' , true);
                                    return false;
                                }
                            });
                            handleListSelection();
                        }, "json");
                },
                "Cancel": function() {jQuery(this).dialog('close')}
            }
        });
    });
}

var handler = function(res) {
    handleResults(res);
    jQuery('#operation-boxes-container').load(
        "[% proxy.uri_for(request.path) %] #operation-boxes", 
        function() {handleOperationSelection(), initialiseOpHandlers()});
    };

jQuery(function() {
    handleOperationSelection();
    jQuery('#list-operation-selector').change(handleOperationSelection);
    initialiseOpHandlers();
});

function openListCreationDialog(list_names, operation) {
    jQuery('#list-namer').dialog({
        autoOpen: true,
        width: 400,
        modal: true,
        buttons: {
            "OK": function() {
                jQuery(this).dialog('close');
                jQuery.post("[% proxy.uri_for('/performlistop') %]", {
                    lists: list_names.join(';'),
                    newname: jQuery('#created-list-name').val(),
                    newdesc: jQuery('#created-list-desc').val(),
                    op: operation
                }, handler, "json");
            },
            "Close": function() {jQuery(this).dialog('close')}
        }
    });
}

</script>



